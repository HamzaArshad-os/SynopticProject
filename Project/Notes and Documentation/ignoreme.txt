test file, ignore me , github confirmation aswell as notes

the projct will currently be designed to work with just YAMLResolved , the reasoning for this as Resolved 
will contain the most amount of data. Refrencing other data wont be an issue, and is often considered a complete
overview of the Specification.

Will if get the chance implement avaialbility to give a JSON Resolved file instead of YAML





//Installation requirments
npm install js-yaml
npm install axios
npm install --save-dev mocha
npm install paths


Note that current json-schema-faker libary does not have support for Dates. OpenAPI handles Dates as Strings, Please consider this when editing the maximum string length paramter. 
Application will now ignore String Rules if it results in not allowing for dates to be generated.
User is now able to view all formats define din specification and mannnually change if rules are applied to them or not

current support for 
Path Parameters: These are defined in the parameters section of the path item object. They are part of the URL path (e.g., /articles/{article_id}). Yes
Query Parameters: These are also defined in the parameters section but are appended to the URL after a ? (e.g., /articles?sort=desc). Yes
Header Parameters: These are defined in the parameters section and are included in the request header. Yes





Please note that this code assumes that your OpenAPI specification is 
correctly formatted and follows the OpenAPI Specification (OAS) version 3.0.0. 
If your specification uses a different version of OAS or has a different format, 

Currently only generates json mockData format 




try to incprroate 
defaultInvalidTypeProduct — If failOnInvalidTypes is disabled this value will be returned on any invalid type given (default: null)
defaultRandExpMax — Setup default value directly as RandExp.prototype.max (default: 10)
pruneProperties — Remove given properties from generated objects (default: [])
ignoreProperties — Skip given properties from being generated (default: [])
ignoreMissingRefs — If enabled, it will resolve to {} for unknown references (default: false)
failOnInvalidTypes — If enabled, it will throw an Error for unknown types (default: true)
failOnInvalidFormat — If enabled, it will throw an Error for unknown formats (default: true)
alwaysFakeOptionals — When enabled, it will set optionalsProbability: 1.0 and  fixedProbabilities: true (default: false)
optionalsProbability — A value from 0.0 to 1.0 to generate values in a consistent way, e.g. 0.5 will generate from 0% to 50% of values. Using arrays it means items, on objects they're properties, etc. (default: false)
fixedProbabilities — If enabled, then optionalsProbability: 0.5 will always generate the half of values (default: false)
useExamplesValue — If enabled, it will return a random value from examples or single value from example if present (default: false)
useDefaultValue — If enabled, it will return the default value if present (default: false)
requiredOnly — If enabled, only required properties will be generated (default: false)
minItems — Override minItems if it's less than this value (default: 0)
maxItems — Override maxItems if it's greater than this value (default: null)
minLength — Override minLength if it's less than this value (default: 0)
maxLength — Override maxLength if it's greater than this value (default: null)
refDepthMin — Set a minimum circular $ref depth to render (default: 0)
refDepthMax — Set a maximum circular $ref depth to render (default: 3)
resolveJsonPath — If enabled, it will expand jsonPath keywords on all generated objects (default: false)
reuseProperties — If enabled, it will try to generate missing properties from existing ones. Only when fillProperties is enabled too (default: false)
sortProperties — If true, properties will be sorted alphabetically, with false original order is kept, or null to keep them randomized (default: null)
fillProperties — If enabled, it will try to generate missing properties to fulfill the schema definition (default: true)
random — Setup a custom randonmess generator, useful for getting deterministic results (default: Math.random)
replaceEmptyByRandomValue — Replace default empty value by a random value (default: false)
omitNulls — Remove any generated null value from the resulting value (default: false)
minDateTime — When generating a string with format date-time, set the minimum date that will get selected. If it's a number it will be the offset from now in milliseconds (default: -2524608000000)
maxDateTime — When generating a string with format date-time, set the maximum date that will get selected. If it's a number it will be the offset from now in milliseconds (default: 1000)

prpto 9  is best version so far ..But does not support circular refrences
